summary_contig_j <- subset_contig %>%
summarise(across(all_of(j_vars), list(
mean = \(x) mean(x, na.rm = TRUE),
sd   = \(x) sd(x, na.rm = TRUE)
)))
# Same k variable summary
summary_contig_k <- map_dfr(k_vars, function(k) {
subset_contig %>%
summarise(
emp_mean = mean(.data[[paste0("emp_", k)]], na.rm = TRUE),
emp_sd   = sd(.data[[paste0("emp_", k)]], na.rm = TRUE),
aww_mean = mean(.data[[paste0("aww", k)]], na.rm = TRUE),
aww_sd   = sd(.data[[paste0("aww", k)]], na.rm = TRUE)
) %>%
mutate(industry = k)
})
n_counties_contig <- subset_contig %>% distinct(county) %>% count()
n_pairs_contig <- contig_panel %>%
filter(nonmissing_both_pair == 66) %>%
distinct(pair_id) %>%
count()
state_minwage_states <- c(
"Alaska", "California", "Connecticut", "Delaware", "Florida", "Hawaii",
"Illinois", "Maine", "Massachusetts", "Minnesota", "New Jersey", "New York",
"Oregon", "Rhode Island", "Vermont", "Washington", "Wisconsin", "District of Columbia"
)
main_panel <- main_panel %>%
mutate(
scaleminwage = if_else(statename %in% state_minwage_states, "state", "federal"),
yearquarter = year + quarter
)
# Summary for plot/table
employment_timeseries <- main_panel %>%
group_by(yearquarter, scaleminwage) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop")
library(dplyr)
library(tidyr)
library(haven)
library(readr)
library(janitor)   # for cleaning column names
library(data.table)  # optional for faster operations``
library(purrr)
library(ggplot2)
library(lubridate)
state_minwage_states <- c(
"Alaska", "California", "Connecticut", "Delaware", "Florida", "Hawaii",
"Illinois", "Maine", "Massachusetts", "Minnesota", "New Jersey", "New York",
"Oregon", "Rhode Island", "Vermont", "Washington", "Wisconsin", "District of Columbia"
)
main_panel <- main_panel %>%
mutate(
scaleminwage = if_else(statename %in% state_minwage_states, "state", "federal"),
yearquarter = make_date(year, (quarter - 1) * 3 + 1, 1)
)
# Summary for plot/table
employment_timeseries <- main_panel %>%
group_by(yearquarter, scaleminwage) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop")
ggplot(employment_timeseries, aes(x = yearquarter, y = emp_tot, color = scaleminwage, group = scaleminwage)) +
geom_line(size = 1) +
labs(
title = "Employment Over Time by Minimum Wage Type",
x = "Quarter",
y = "Total Employment",
color = "Min Wage Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
state_minwage_states <- c(
"Alaska", "California", "Connecticut", "Delaware", "Florida", "Hawaii",
"Illinois", "Maine", "Massachusetts", "Minnesota", "New Jersey", "New York",
"Oregon", "Rhode Island", "Vermont", "Washington", "Wisconsin", "District of Columbia"
)
main_panel <- main_panel %>%
mutate(
scaleminwage = if_else(statename %in% state_minwage_states, "state", "federal"),
yearquarter = make_date(year, (quarter - 1) * 3 + 1, 1)
)
# Summary for plot/table
employment_timeseries <- main_panel %>%
group_by(yearquarter, scaleminwage) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop")
employment_timeseries <- employment_timeseries %>%
arrange(scaleminwage, yearquarter) %>%
group_by(scaleminwage) %>%
mutate(
emp_tot_yoy = emp_tot - lag(emp_tot, 4),  # 4 quarters = 1 year
emp_tot_yoy_pct = 100 * emp_tot_yoy / lag(emp_tot, 4)
) %>%
ungroup()
ggplot(employment_timeseries, aes(x = yearquarter, y = emp_tot_yoy_pct, color = scaleminwage, group = scaleminwage)) +
geom_line(size = 1) +
labs(
title = "Employment Over Time by Minimum Wage Type",
x = "Quarter",
y = "Total Employment",
color = "Min Wage Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
state_minwage_states <- c(
"Alaska", "California", "Connecticut", "Delaware", "Florida", "Hawaii",
"Illinois", "Maine", "Massachusetts", "Minnesota", "New Jersey", "New York",
"Oregon", "Rhode Island", "Vermont", "Washington", "Wisconsin", "District of Columbia"
)
main_panel <- main_panel %>%
mutate(
scaleminwage = if_else(statename %in% state_minwage_states, "state", "federal"),
yearquarter = make_date(year, (quarter - 1) * 3 + 1, 1)
)
# Summary for plot/table
employment_timeseries <- main_panel %>%
group_by(scaleminwage, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter) %>%
reframe(
yearquarter = yearquarter,
emp_tot = emp_tot,
emp_tot_yoy = emp_tot - lag(emp_tot, 4),
emp_tot_yoy_pct = 100 * emp_tot_yoy / lag(emp_tot, 4)
) %>%
ungroup()
ggplot(employment_timeseries, aes(x = yearquarter, y = emp_tot_yoy_pct, color = scaleminwage, group = scaleminwage)) +
geom_line(size = 1) +
labs(
title = "Employment Over Time by Minimum Wage Type",
x = "Quarter",
y = "Total Employment",
color = "Min Wage Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
state_minwage_states <- c(
"Alaska", "California", "Connecticut", "Delaware", "Florida", "Hawaii",
"Illinois", "Maine", "Massachusetts", "Minnesota", "New Jersey", "New York",
"Oregon", "Rhode Island", "Vermont", "Washington", "Wisconsin", "District of Columbia"
)
main_panel <- main_panel %>%
mutate(
scaleminwage = if_else(statename %in% state_minwage_states, "state", "federal"),
yearquarter = make_date(year, (quarter - 1) * 3 + 1, 1)
)
# Summary for plot/table
employment_timeseries <- main_panel %>%
group_by(scaleminwage, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter) %>%
reframe(
yearquarter = yearquarter,
emp_tot = emp_tot,
emp_tot_yoy = (emp_tot - lag(emp_tot, 4)) / lag(emp_tot, 4),
) %>%
ungroup()
ggplot(employment_timeseries, aes(x = yearquarter, y = emp_tot_yoy, color = scaleminwage, group = scaleminwage)) +
geom_line(size = 1) +
labs(
title = "Employment Over Time by Minimum Wage Type",
x = "Quarter",
y = "Total Employment",
color = "Min Wage Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(tidyr)
library(haven)
library(readr)
library(janitor)   # for cleaning column names
library(data.table)  # optional for faster operations``
library(purrr)
library(ggplot2)
library(lubridate)
main_panel <- read_dta("data/minwage/QCEWindustry_minwage_all.dta") %>%
clean_names()
contig_panel <- read_dta("data/minwage/QCEWindustry_minwage_contig.dta") %>%
clean_names()
View(main_panel)
View(main_panel)
View(main_panel)
main_panel %>% names()
library(dplyr)
library(tidyr)
library(haven)
library(readr)
library(janitor)   # for cleaning column names
library(data.table)  # optional for faster operations``
library(purrr)
library(ggplot2)
library(lubridate)
main_panel %>% names()
# Select rows where nonmissing_rest_both == 66
subset_main <- main_panel %>% filter(nonmissing_rest_both == 66)
# Variables for summary
j_vars <- c("countypop2000", "cntypopdens", "cntyarea", "emp_rest_both", "aww_rest_both", "minwage")
# Summary stats
summary_j <- subset_main %>%
summarise(across(all_of(j_vars), list(
mean = \(x) mean(x, na.rm = TRUE),
sd   = \(x) sd(x, na.rm = TRUE)
)))
# Industry-specific vars
k_vars <- c("acfsretail", "retail", "mfg", "tot")
emp_summary <- map_dfr(k_vars, function(k) {
subset_main %>%
summarise(
emp_mean = mean(.data[[paste0("emp_", k)]], na.rm = TRUE),
emp_sd   = sd(.data[[paste0("emp_", k)]], na.rm = TRUE),
aww_mean = mean(.data[[paste0("aww", k)]], na.rm = TRUE),
aww_sd   = sd(.data[[paste0("aww", k)]], na.rm = TRUE)
) %>%
mutate(industry = k)
})
n_counties <- subset_main %>%
count(county, name = "count") %>%
summarise(n_distinct = n_distinct(county)) %>%
pull(n_distinct)
main_panel <- main_panel %>%
mutate(
fedevent = as.integer(event_type == 1),
stateevent = as.integer(event_type == 2)
) %>%
group_by(county) %>%
mutate(
fedeventspercounty = sum(fedevent, na.rm = TRUE),
steventspercounty  = sum(stateevent, na.rm = TRUE)
) %>%
ungroup()
# Summarise those for descriptive table
main_panel %>%
filter(nonmissing_rest_both == 66) %>%
summarise(
mean_fedevents = mean(fedeventspercounty),
mean_stevents  = mean(steventspercounty)
)
subset_contig <- contig_panel %>% filter(nonmissing_rest_both == 66)
# Same j variable summary
summary_contig_j <- subset_contig %>%
summarise(across(all_of(j_vars), list(
mean = \(x) mean(x, na.rm = TRUE),
sd   = \(x) sd(x, na.rm = TRUE)
)))
# Same k variable summary
summary_contig_k <- map_dfr(k_vars, function(k) {
subset_contig %>%
summarise(
emp_mean = mean(.data[[paste0("emp_", k)]], na.rm = TRUE),
emp_sd   = sd(.data[[paste0("emp_", k)]], na.rm = TRUE),
aww_mean = mean(.data[[paste0("aww", k)]], na.rm = TRUE),
aww_sd   = sd(.data[[paste0("aww", k)]], na.rm = TRUE)
) %>%
mutate(industry = k)
})
library(dplyr)
library(tidyr)
library(haven)
library(readr)
library(janitor)   # for cleaning column names
library(data.table)  # optional for faster operations``
library(purrr)
library(ggplot2)
library(lubridate)
library(stats)
main_panel <- main_panel %>%
mutate(
fedevent = as.integer(event_type == 1),
stateevent = as.integer(event_type == 2)
) %>%
group_by(county) %>%
mutate(
fedeventspercounty = sum(fedevent, na.rm = TRUE),
steventspercounty  = sum(stateevent, na.rm = TRUE)
) %>%
ungroup()
# Summarise those for descriptive table
main_panel %>%
filter(nonmissing_rest_both == 66) %>%
summarise(
mean_fedevents = mean(fedeventspercounty),
mean_stevents  = mean(steventspercounty)
)
subset_contig <- contig_panel %>% filter(nonmissing_rest_both == 66)
# Same j variable summary
summary_contig_j <- subset_contig %>%
summarise(across(all_of(j_vars), list(
mean = \(x) mean(x, na.rm = TRUE),
sd   = \(x) sd(x, na.rm = TRUE)
)))
# Same k variable summary
summary_contig_k <- map_dfr(k_vars, function(k) {
subset_contig %>%
summarise(
emp_mean = mean(.data[[paste0("emp_", k)]], na.rm = TRUE),
emp_sd   = sd(.data[[paste0("emp_", k)]], na.rm = TRUE),
aww_mean = mean(.data[[paste0("aww", k)]], na.rm = TRUE),
aww_sd   = sd(.data[[paste0("aww", k)]], na.rm = TRUE)
) %>%
mutate(industry = k)
})
state_minwage_states <- c(
"Alaska", "California", "Connecticut", "Delaware", "Florida", "Hawaii",
"Illinois", "Maine", "Massachusetts", "Minnesota", "New Jersey", "New York",
"Oregon", "Rhode Island", "Vermont", "Washington", "Wisconsin", "District of Columbia"
)
main_panel <- main_panel %>%
mutate(
scaleminwage = if_else(statename %in% state_minwage_states, "state", "federal"),
yearquarter = make_date(year, (quarter - 1) * 3 + 1, 1)
)
# Summary for plot/table
employment_timeseries <- main_panel %>%
group_by(scaleminwage, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter) %>%
reframe(
yearquarter = yearquarter,
emp_tot = emp_tot,
emp_tot_yoy = (emp_tot - lag(emp_tot, 4)) / lag(emp_tot, 4),
) %>%
ungroup()
state_emp_ts <- main_panel %>%
group_by(state_name)
state_emp_ts
state_emp_ts <- main_panel %>%
group_by(state_name) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter) %>%
state_emp_ts <- main_panel %>%
group_by(state_name) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE)) %>%
arrange(yearquarter) %>%
state_emp_ts
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE)) %>%
arrange(yearquarter) %>%
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter) %>%
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter)
state_emp_ts
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE)) %>%
arrange(yearquarter)
state_emp_ts
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter)
state_emp_ts
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter) %>%
ungroup()
state_emp_ts
library(dplyr)
library(tidyr)
library(haven)
library(readr)
library(janitor)   # for cleaning column names
library(data.table)  # optional for faster operations``
library(purrr)
library(ggplot2)
library(lubridate)
library(stats)
library(fixest)
install.packages("fixest")
library(dplyr)
library(tidyr)
library(haven)
library(readr)
library(janitor)   # for cleaning column names
library(data.table)  # optional for faster operations``
library(purrr)
library(ggplot2)
library(lubridate)
library(stats)
library(fixest)
feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
fe_emp_tot <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
fe_emp_tot <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
fe_emp_tot$residuals
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
residuals <- resid(mod)
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
residuals <- resid(mod)
acf(residuals)
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
residuals <- resid(mod)
ggplot(data = residuals)
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
residuals <- resid(mod)
ggplot(data = data.frame(residuals))
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
residuals <- resid(mod)
View(state_emp_ts)
View(mod)
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
state_emp_ts$fe_residuals <- resid(mod)
state_emp_ts
mean_resids <-state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(residuals, na.rm = TRUE))
mean_resids <-state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(residuals, na.rm = TRUE))
ggplot(mean_resids)
mean_resids <-state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(residuals, na.rm = TRUE))
ggplot(mean_resids, aes(x = yearquarter, y = mean_resid_yq)) +
geom_line(size = 1) +
labs(
title = "Employement Mean State-Year residuals",
x = "Quarter",
y = "Total Employment"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(mean_resids)
state_emp_ts %>%
group_by(yearquarter)
state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(residuals, na.rm = TRUE))
state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = sum(residuals, na.rm = TRUE))
state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = sum(residuals, na.rm = TRUE), .groups = "drop")
state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = sum(fe_residuals, na.rm = TRUE), .groups = "drop")
state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(fe_residuals, na.rm = TRUE), .groups = "drop")
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
state_emp_ts$fe_residuals <- resid(mod)
state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(fe_residuals, na.rm = TRUE), .groups = "drop")
mean_resids <-state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(fe_residuals, na.rm = TRUE))
ggplot(mean_resids, aes(x = yearquarter, y = mean_resid_yq)) +
geom_line(size = 1) +
labs(
title = "Employement Mean State-Year residuals",
x = "Quarter",
y = "Total Employment"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
state_emp_ts$fe_residuals <- resid(mod)
mean_resids <-state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(fe_residuals, na.rm = TRUE))
ggplot(mean_resids, aes(x = yearquarter, y = mean_resid_yq)) +
geom_line(size = 1) +
labs(
title = "Employement Mean State-Year residuals",
x = "Quarter",
y = "Total Employment"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
mod <- feols(emp_tot ~ 1 | state_name + yearquarter, data = state_emp_ts)
state_emp_ts$fe_residuals <- resid(mod)
summary(mod)
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter) %>%
reframe(
yearquarter = yearquarter,
emp_tot = emp_tot,
emp_tot_yoy = (emp_tot - lag(emp_tot, 4)) / lag(emp_tot, 4),
) %>%
ungroup()
mod <- feols(emp_tot_yoy ~ 1 | state_name + yearquarter, data = state_emp_ts)
state_emp_ts$fe_residuals <- resid(mod)
mod <- feols(emp_tot_yoy ~ 1 | state_name + yearquarter, data = state_emp_ts)
state_emp_ts$fe_residuals <- c(NA, resid(mod))
state_emp_ts <- main_panel %>%
group_by(state_name, yearquarter) %>%
summarise(emp_tot = sum(emp_tot, na.rm = TRUE), .groups = "drop_last") %>%
arrange(yearquarter) %>%
reframe(
yearquarter = yearquarter,
emp_tot = emp_tot,
emp_tot_yoy = (emp_tot - lag(emp_tot, 4)) / lag(emp_tot, 4),
) %>%
ungroup() %>%
drop_na()
mod <- feols(emp_tot_yoy ~ 1 | state_name + yearquarter, data = state_emp_ts)
state_emp_ts$fe_residuals <- resid(mod)
summary(mod)
mean_resids <-state_emp_ts %>%
group_by(yearquarter) %>%
summarize(mean_resid_yq = mean(fe_residuals, na.rm = TRUE))
ggplot(mean_resids, aes(x = yearquarter, y = mean_resid_yq)) +
geom_line(size = 1) +
labs(
title = "Employement Mean State-Year residuals",
x = "Quarter",
y = "Total Employment"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
